{"version":3,"sources":["transitions/fadeTransition.jsx","loginrender.js","App.js","serviceWorker.js","index.js"],"names":["FadeTransition","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","defaultStyle","transitionProperty","transition","concat","duration","transitionStyle","entering","opacity","entered","transitionDelay","exiting","exited","_this2","react_default","a","createElement","Transition_default","in","isOpen","timeout","state","React","Children","map","children","child","idx","cloneElement","style","assign","Component","loginrender","isLoginOpen","isRegisterOpen","setState","className","onClick","showLoginBox","bind","showRegisterBox","fadeTransition_FadeTransition","loginrender_LoginBox","loginrender_RegisterBox","LoginBox","e","htmlFor","type","name","placeholder","submitLogin","RegisterBox","_this3","username","email","password","errors","pwdState","elm","msg","prevState","toConsumableArray","newArr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","value","push","return","target","clearValidationErr","length","console","log","showValidationErr","usernameErr","passwordErr","emailErr","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","pwdWeak","pwdMedium","pwdStrong","onChange","onUsernameChange","onEmailChange","onPasswordChange","onHover","openPopup","submitRegister","App","src_loginrender_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f3d9c9e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport Transition from \"react-transition-group/Transition\";\r\n\r\nexport default class FadeTransition extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //Default Style\r\n    this.defaultStyle = {\r\n      transitionProperty: \"opacity\",\r\n      transition: `${this.props.duration}ms ease-in-out`\r\n    };\r\n    this.transitionStyle = {\r\n      entering: {\r\n        opacity: \"0\"\r\n      },\r\n      entered: {\r\n        opacity: \"1\",\r\n        transitionDelay: \"700ms\"\r\n      },\r\n      exiting: {\r\n        opacity: \"0\"\r\n      },\r\n      exited: {\r\n        opacity: \"0\"\r\n      }\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Transition in={this.props.isOpen} timeout={this.props.duration}>\r\n        {(state) => {\r\n          if (state === \"exited\") \r\n            return null;\r\n          return React\r\n            .Children\r\n            .map(this.props.children, (child, idx) => {\r\n              return React.cloneElement(child, {\r\n                style: Object.assign({}, this.defaultStyle, this.transitionStyle[state])\r\n              });\r\n            });\r\n        }}\r\n      </Transition>\r\n    );\r\n\r\n  }\r\n\r\n}","import React from \"react\";\r\n\r\nimport './loginrender.css';\r\nimport './App.css';\r\n\r\n\r\nimport FadeTransition from \"../src/transitions/fadeTransition\";\r\n\r\nclass loginrender extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoginOpen: true,\r\n      isRegisterOpen: false\r\n    };\r\n  }\r\n\r\n  showLoginBox() {\r\n    this.setState({isLoginOpen: true, isRegisterOpen: false});\r\n  }\r\n\r\n  showRegisterBox() {\r\n    this.setState({isRegisterOpen: true, isLoginOpen: false});\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"root-container\">\r\n\r\n        <div className=\"box-controller\">\r\n          <div\r\n            className={\"controller \" + (this.state.isLoginOpen\r\n            ? \"selected-controller\"\r\n            : \"\")}\r\n            onClick={this\r\n            .showLoginBox\r\n            .bind(this)}>\r\n            Login\r\n          </div>\r\n          <div\r\n            className={\"controller \" + (this.state.isRegisterOpen\r\n            ? \"selected-controller\"\r\n            : \"\")}\r\n            onClick={this\r\n            .showRegisterBox\r\n            .bind(this)}>\r\n            Register\r\n          </div>\r\n        </div>\r\n \r\n        <FadeTransition isOpen={this.state.isLoginOpen} duration={500}>\r\n          <div className=\"box-container\">\r\n            <LoginBox/>\r\n          </div>\r\n        </FadeTransition>\r\n        <FadeTransition isOpen={this.state.isRegisterOpen} duration={500}>\r\n          <div className=\"box-container\">\r\n            <RegisterBox/>\r\n          </div>\r\n        </FadeTransition>\r\n\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nclass LoginBox extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  submitLogin(e) {\r\n      \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"inner-container\">\r\n        <div className=\"header\">\r\n          Login\r\n        </div>\r\n        <div className=\"box\">\r\n\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              className=\"login-input\"\r\n              placeholder=\"Username\"/>\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              className=\"login-input\"\r\n              placeholder=\"Password\"/>\r\n          </div>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"login-btn\"\r\n            onClick={this.submitLogin.bind(this)}>Login</button>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nfunction pop(props) {\r\n  return\r\n}\r\n\r\nclass RegisterBox extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: [],\r\n      pwdState: null\r\n    };\r\n  }\r\n\r\n  showValidationErr(elm, msg) {\r\n    this.setState((prevState) => ({\r\n      errors: [\r\n        ...prevState.errors, {\r\n          elm,\r\n          msg\r\n        }\r\n      ]\r\n    }));\r\n  }\r\n\r\n  clearValidationErr(elm) {\r\n    this.setState((prevState) => {\r\n      let newArr = [];\r\n      for (let err of prevState.errors) {\r\n        if (elm !== err.elm) {\r\n          newArr.push(err);\r\n        }\r\n      }\r\n      return {errors: newArr};\r\n    });\r\n  }\r\n\r\n  onUsernameChange(e) {\r\n    this.setState({username: e.target.value});\r\n    this.clearValidationErr(\"username\");\r\n  }\r\n\r\n  onEmailChange(e) {\r\n    this.setState({email: e.target.value});\r\n    this.clearValidationErr(\"email\");\r\n  }\r\n\r\n  onPasswordChange(e) {\r\n    this.setState({password: e.target.value});\r\n    this.clearValidationErr(\"password\");\r\n\r\n    this.setState({pwdState: \"weak\"});\r\n    if (e.target.value.length > 8) {\r\n      this.setState({pwdState: \"medium\"});\r\n    } else if (e.target.value.length > 12) {\r\n      this.setState({pwdState: \"strong\"});\r\n    }\r\n\r\n  }\r\n\r\n  openPopup(e) {\r\n    console.log(\"Hello world!\");\r\n  }\r\n\r\n  submitRegister(e) {\r\n\r\n    console.log(this.state);\r\n\r\n    if (this.state.username === \"\") {\r\n      this.showValidationErr(\"username\", \"Username Cannot be empty!\");\r\n    }\r\n    if (this.state.email === \"\") {\r\n      this.showValidationErr(\"email\", \"Email Cannot be empty!\");\r\n    }\r\n    if (this.state.password === \"\") {\r\n      this.showValidationErr(\"password\", \"Password Cannot be empty!\");\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    let usernameErr = null,\r\n      passwordErr = null,\r\n      emailErr = null;\r\n\r\n    for (let err of this.state.errors) {\r\n      if (err.elm === \"username\") {\r\n        usernameErr = err.msg;\r\n      }\r\n      if (err.elm === \"password\") {\r\n        passwordErr = err.msg;\r\n      }\r\n      if (err.elm === \"email\") {\r\n        emailErr = err.msg;\r\n      }\r\n    }\r\n\r\n    let pwdWeak = false,\r\n      pwdMedium = false,\r\n      pwdStrong = false;\r\n\r\n    if (this.state.pwdState === \"weak\") {\r\n      pwdWeak = true;\r\n    } else if (this.state.pwdState === \"medium\") {\r\n      pwdWeak = true;\r\n      pwdMedium = true;\r\n    } else if (this.state.pwdState === \"strong\") {\r\n      pwdWeak = true;\r\n      pwdMedium = true;\r\n      pwdStrong = true;\r\n    }\r\n\r\n    return (\r\n      <div className=\"inner-container\">\r\n        <div className=\"header\">\r\n          Register\r\n        </div>\r\n        <div className=\"box\">\r\n\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              className=\"login-input\"\r\n              placeholder=\"Username\"\r\n              onChange={this\r\n              .onUsernameChange\r\n              .bind(this)}/>\r\n            <small className=\"danger-error\">{usernameErr\r\n                ? usernameErr\r\n                : \"\"}</small>\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              className=\"login-input\"\r\n              placeholder=\"Email\"\r\n              onChange={this\r\n              .onEmailChange\r\n              .bind(this)}/>\r\n            <small className=\"danger-error\">{emailErr\r\n                ? emailErr\r\n                : \"\"}</small>\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              className=\"login-input\"\r\n              placeholder=\"Password\"\r\n              onChange={this\r\n              .onPasswordChange\r\n              .bind(this)}/>\r\n            <small className=\"danger-error\">{passwordErr\r\n                ? passwordErr\r\n                : \"\"}</small>\r\n\r\n            {this.state.password && <div className=\"password-state\">\r\n              <div\r\n                className={\"pwd pwd-weak \" + (pwdWeak\r\n                ? \"show\"\r\n                : \"\")}></div>\r\n              <div\r\n                className={\"pwd pwd-medium \" + (pwdMedium\r\n                ? \"show\"\r\n                : \"\")}></div>\r\n              <div\r\n                className={\"pwd pwd-strong \" + (pwdStrong\r\n                ? \"show\"\r\n                : \"\")}></div>\r\n            </div>}\r\n\r\n          </div>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"login-btn\"\r\n            onHover={this\r\n            .openPopup\r\n            .bind(this)}\r\n            onClick={this\r\n            .submitRegister\r\n            .bind(this)}>Register</button>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default loginrender;","import React, { Component } from 'react';\nimport './App.css';\nimport { Button } from 'reactstrap';\nimport Log from './loginrender';\nimport './loginrender.css'\n\nclass App extends Component {\n  render() {\n    return (\n\n\n      <div className=\"root-container\">\n\n        <Log />\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}